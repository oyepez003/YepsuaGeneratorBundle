
    /**
     * Finds and displays a {{ entity }} entity.
     *
{% if 'annotation' == format %}
     * @Route("/{id}", name="{{ route_name_prefix }}_show")
     * @Method("GET")
     * @Template()
{% endif %}
     */
    public function showAction($id)
    {
        try{
            if(!$this->getRequest()->isXmlHttpRequest()){
                return $this->redirect($this->generateUrl('{{ route_name_prefix }}'));
            }
            
            $entity = $this->getEntityRepository()->find($id);

            if (!$entity) {
                throw $this->createNotFoundException('msg.unable.to.find.entity');
            }
{% if 'delete' in actions %}

            $deleteForm = $this->createDeleteForm($id);
{% endif %}

{% if 'annotation' == format %}
            return array(
                'entity'      => $entity,
{% if 'delete' in actions %}
                'delete_form' => $deleteForm->createView(),
{% endif %}
        );
{% else %}
        return $this->render('{{ bundle }}:{{ entity|replace({'\\': '/'}) }}:show.html.twig', array(
                'entity'      => $entity,
{% if 'delete' in actions %}
                'delete_form' => $deleteForm->createView(),
{%- endif %}
            ));
{% endif %}
        }catch(\Exception $e){
            $this->get('logger')->crit($e->getMessage());
            return new Response(Notification::error($e->getMessage()), 203);
        }
    }
